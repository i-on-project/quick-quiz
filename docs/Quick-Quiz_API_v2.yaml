/guest/register:
  post:
   parameters:
    - in: body
      schema:
        $ref: '#/definitions/User'
  response:
    200:
      description: User does not exist / new user record created successfully
      parameters:
      - in: body
        schema:
          $ref: '#/definitions/UserToken'
    400:
      description: User already exists
      parameters:
      - in: body
        schema:
          $ref: '#/definitions/Error'


/guest/logmein:
     post:
      parameters:
      - in: body
        schema:
          $ref: '#/definitions/UserToken'
      responses:
        200:
          description: User exists and token matches
          parameters:
          - in: body
            schema:
              $ref: '#/definitions/UserToken'
        400:
          description: User or token missmatch
          parameters:
          - in: body
            schema:
              $ref: '#/definitions/Error'
  
/guest/login:
    post:
    parameters:
    - in: body
      schema:
        $ref: '#/definitions/UserToken'
    responses:
      200:
        description: User Exists and generates a new token for link creation
        parameters:
        - in: body
          schema:
            $ref: '#/definitions/UserToken'
      400:
        description: User or token missmatch
        parameters:
        - in: body
          schema:
            $ref: '#/definitions/Error'

/user/createsession:
   post:
      parameters:
      - in: body
        schema:
          $ref: '#/definitions/Session'
      responses:
        200:
          description: User exists and token matches
          parameters:
          - in: body
            schema:
              $ref: '#/definitions/Session'
        400:
          description: User or token missmatch
          parameters:
          - in: body
            schema:
              $ref: '#/definitions/Error'



definitions:
  User: ## Example ##
    type: object
    properties:
      UserName: 
        type: string
        format: email
      DisplayName:
        type: string
        format: text
        
  UserToken:
    type: object
    properties:
      Token:
        type: string
        format: alphanumeric
      ExpireDate:
        type: integer
        format: int64
      User:
        $ref: '#/definitions/User'

  Session: ## Example ##
    type: object
    properties:
      SessionName: 
        type: string
        format: text
      NumberOfParticipants:
        type: integer
        format: int32
      GeoLocation:
        type: object
      EndDate:
        type: integer
        format: int64
      TemplateId:
        type: string
      
      
  GeoLocation:
    type: object
    properties:
      Latitude: 
        type: Number
        format: Double
      Logitude: 
        type: Number
        format: Double
      Radius:
        type: integer
        format: int32
      RadiusUnit:
        type: interger
        format: int32

      

  Error:
    type: object
    properties:
      Code:
        type: int32
      Reason:
        type: string
        format: text