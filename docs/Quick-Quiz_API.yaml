swagger: '2.0'
info:
  description: Quick-Quiz Public API
  version: 1.0.0
  title: Quick-Quiz API
  # termsOfService: To be Created
  #contact:
    #email: An Email
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
# host: https://dashboard.heroku.com/ ## Once deployed in Heroku replace with API link
# basePath: /v2
tags:

- name: guest
  description: Operations about guest
  # externalDocs:
  #   description: Find out more about our store
  #   url: http://swagger.io
# schemes:
# - http
paths:
  /guest/joinsession:
    post:
      tags:
      - guest
      summary: Guest joins a given session
      description: Anonymous user joins a given session
      operationId: joinSession
      produces:
      - application/json
      parameters:
      - in: body
        name: body
        description: Session required information (sessionId, geoLocation info)
        required: true
        schema:
          $ref: '#/definitions/Session'
      responses:
        202:
          description: User able to join the session
        400:
          description: Bad request
        404:
          description: No such session or session is over
        500:
          description: Unkown error
  /guest/answer:
     post:
      tags:
      - guest
      summary: Guest replies to a question
      description: Guest replies to a question of a given quiz of a given session
      operationId: submitAnswer
      produces:
      - application/json
      parameters:
      - in: body
        name: body
        description: Answer required information (sessionId, quizId, questionNumber, answer)
        required: true
        schema:
          $ref: '#/definitions/Answer'
      responses:
        202:
          description: Answer Submited successfully
        400:
          description: Bad request
        404:
          description: No such session or session is over / no Such quiz or quiz is over / No such Question
        500:
          description: Unkown error
  /guest/register:
     post:
      tags:
      - guest
      summary: Registers a user 
      description: Guest register's self and creates a user with the ability to login
      operationId: registerUser
      produces:
      - application/json
      parameters:
      - in: body
        name: body
        description: User object
        required: true
        schema:
          $ref: '#/definitions/User'
      responses:
        201:
          description: User Registered successfully
        400:
          description: Bad request
        409:
          description: User Already Exists
        500:
          description: Unkown error
  /guest/login:
     post:
      tags:
      - guest
      summary: Guest requests login link 
      description: Guest requests the login link which is sent to the account email
      operationId: requestUserLogin
      produces:
      - application/json
      parameters:
      - in: body
        name: body
        description: UserName
        required: true
        schema:
          $ref: '#/definitions/User'
      responses:
        200:
          description: request is always accepted

  /guest/logmein:
     post:
      tags:
      - guest
      summary: Guest Logs in 
      description: Guest logs in into self account
      operationId: logInUser
      produces:
      - application/json
      parameters:
      - in: body
        name: body
        description: UserName and userAccountIdentifier
        required: true
        schema:
          $ref: '#/definitions/User'
      responses:
        202:
          description: User Logged in successfully
        400:
          description: Bad request
        409:
          description: Invalid UserAccountIdentifer
        500:
          description: Unkown error

### NOT Defined from here on  ###
securityDefinitions:
  quickquiz_auth:
    type: oauth2
    authorizationUrl: http://example.com
    flow: implicit
    scopes:
      write: to be defined
      read: to be defined
  api_key:
    type: apiKey
    name: api_key
    in: header
definitions:
 
  Session: ## Example ##
    type: object
    properties:
      id:
        type: integer
        format: int64


  Answer: ## Example ##
    type: object
    properties:
      id:
        type: integer
        format: int64

  User: ## Example ##
    type: object
    properties:
      id:
        type: integer
        format: int64


  ApiResponse:
    type: object
    properties:
      code:
        type: integer
        format: int32
      type:
        type: string
      message:
        type: string
externalDocs:
  description: Find out more about Swagger
  url: http://swagger.io
# Added by API Auto Mocking Plugin
host: virtserver.swaggerhub.com
basePath: /VitMexia/QuickQuiz/1.0.0
schemes:
 - https
 - http